name: Playwright Tests

on:
  workflow_call:
    inputs:
      frontendHostname:
        type: string
        description: 'Hostname of the frontend server (optional)'
        required: false
      playwright_branch:  
        type: string
        description: 'The name of the branch to be tested with Playwright.'
        required: false  
  workflow_dispatch:
    inputs:
      frontendHostname:
        type: string
        description: 'Hostname of the frontend server (optional)'
        required: true
  push:
    branches: [ main ]

jobs:

  determine_playwright_branch:
    if: ${{ github.event_name == 'push' && !startsWith(github.ref_name,'dependabot/') }}
    runs-on: ubuntu-latest
    outputs:
      playwright_branch: ${{ steps.check_branch.outputs.playwright_branch }}
    steps:
      - name: Check current branch
        run: |
          echo "Current branch: ${{ github.ref_name }}"
          
      - name: Check if Playwright branch exists
        id: check_branch
        run: |
          playwright_branch="${{ github.ref_name }}"
          if git ls-remote --heads https://github.com/dBildungsplattform/schulportal-testautomatisierung $playwright_branch &> /dev/null; then
            echo "playwright_branch=$playwright_branch" >> $GITHUB_OUTPUT
          else
            echo "playwright_branch=main" >> $GITHUB_OUTPUT
          fi

  run_playwright_end2end_tests:
    needs: determine_playwright_branch
    continue-on-error: true
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - name: If input frontendHostname is given, set env variable
      if: ${{ inputs.frontendHostname }}
      run: echo "FRONTEND_URL=https://${{ inputs.frontendHostname }}/" >> $GITHUB_ENV
    - uses: actions/checkout@v3
      with:
        repository: 'dBildungsplattform/schulportal-testautomatisierung'
        ref: ${{ needs.determine_playwright_branch.outputs.playwright_branch }}
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Remove Microsoft APT and  Update Packages
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update || true
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
      env:
        USER: '${{ secrets.USER }}'
        PW: '${{ secrets.PW }}'
    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30npm login