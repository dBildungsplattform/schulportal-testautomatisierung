name: Pull Request Playwright Test

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Remove Microsoft APT and  Update Packages
      run: |
        sudo rm /etc/apt/sources.list.d/microsoft-prod.list
        sudo apt-get update || true
    - name: Install dependencies
      run: npm ci

    - name: Install Playwright Browsers
      run: npx playwright install --with-deps

    - name: Create Tag
      run: |
        regex_long='^([[:alpha:]]+?-[[:digit:]]+-[[:digit:]]+)'
        regex_short='^([[:alpha:]]+?-[[:digit:]]+)'
        if [[ "${{ github.head_ref }}" =~ $regex_long ]]; then
          tag="$(echo ${BASH_REMATCH[1]} | tr [A-Z] [a-z])"
        elif [[ "${{ github.head_ref }}" =~ $regex_short ]]; then
          tag="$(echo ${BASH_REMATCH[1]} | tr [A-Z] [a-z])"
        elif [[ "${{ github.head_ref }}" == 'main' ]]; then
          tag=""
        else
        echo "::error::Couldn't extract ticket from branch" ${{ github.head_ref }} ". If not main the branch name should begin alpha-digit or alpha-digit-digit blocks (e.g. SPSH-1234-test-name or release-1-1-optional-text)"
          exit 1
        fi
        echo "tag=${tag}" >> "$GITHUB_OUTPUT"
        echo "tag=${tag}"

    #- name: Determine Frontend URL
    #  run: |
    #    BRANCH_NAME="${{ github.head_ref }}"
    #    if [[ ]]; then
    #      FRONTEND_URL="https://main.dev.spsh.dbildungsplattform.de/"
    #    else
    #      FRONTEND_URL="https://main.dev.spsh.dbildungsplattform.de/"
    #    fi
    #    echo "FRONTEND_URL=$FRONTEND_URL" >> $GITHUB_ENV

    - name: Run Playwright tests
      run:  ENV='dev' FRONTEND_URL='${{ env.FRONTEND_URL }}' npx playwright test --config=playwright.config.ts --grep "@long" --project "chromium"
      
      env:
        USER: '${{ secrets.USER }}'
        PW: '${{ secrets.PW }}'
    #- uses: actions/upload-artifact@v4
    #  if: always()
    #  with:
    #    name: playwright-report
    #    path: playwright-report/
    #    retention-days: 30npm login
    #- uses: RocketChat/Rocket.Chat.GitHub.Action.Notification@1.1.1
    #  if: failure()
    #  with:
    #    type: ${{ job.status }} 
    #    job_name: 'Playwright Job Status: '
    #    url: ${{ secrets.RC_WEBHOOK }}
    #    channel: '#SPSH-Test-Automation'
    #    username: Playwright Notificator