/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RollenArt } from './RollenArt';
import {
    RollenArtFromJSON,
    RollenArtFromJSONTyped,
    RollenArtToJSON,
} from './RollenArt';
import type { RollenMerkmal } from './RollenMerkmal';
import {
    RollenMerkmalFromJSON,
    RollenMerkmalFromJSONTyped,
    RollenMerkmalToJSON,
} from './RollenMerkmal';
import type { RollenSystemRecht } from './RollenSystemRecht';
import {
    RollenSystemRechtFromJSON,
    RollenSystemRechtFromJSONTyped,
    RollenSystemRechtToJSON,
} from './RollenSystemRecht';

/**
 * 
 * @export
 * @interface RolleResponse
 */
export interface RolleResponse {
    /**
     * 
     * @type {string}
     * @memberof RolleResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof RolleResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof RolleResponse
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof RolleResponse
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof RolleResponse
     */
    administeredBySchulstrukturknoten: string;
    /**
     * 
     * @type {RollenArt}
     * @memberof RolleResponse
     */
    rollenart: RollenArt;
    /**
     * 
     * @type {Set<RollenMerkmal>}
     * @memberof RolleResponse
     */
    merkmale: Set<RollenMerkmal>;
    /**
     * 
     * @type {Set<RollenSystemRecht>}
     * @memberof RolleResponse
     */
    systemrechte: Set<RollenSystemRecht>;
    /**
     * 
     * @type {string}
     * @memberof RolleResponse
     */
    administeredBySchulstrukturknotenName: string | null;
    /**
     * 
     * @type {string}
     * @memberof RolleResponse
     */
    administeredBySchulstrukturknotenKennung: string | null;
    /**
     * 
     * @type {number}
     * @memberof RolleResponse
     */
    version: number;
}

/**
 * Check if a given object implements the RolleResponse interface.
 */
export function instanceOfRolleResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "administeredBySchulstrukturknoten" in value;
    isInstance = isInstance && "rollenart" in value;
    isInstance = isInstance && "merkmale" in value;
    isInstance = isInstance && "systemrechte" in value;
    isInstance = isInstance && "administeredBySchulstrukturknotenName" in value;
    isInstance = isInstance && "administeredBySchulstrukturknotenKennung" in value;
    isInstance = isInstance && "version" in value;

    return isInstance;
}

export function RolleResponseFromJSON(json: any): RolleResponse {
    return RolleResponseFromJSONTyped(json, false);
}

export function RolleResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RolleResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'name': json['name'],
        'administeredBySchulstrukturknoten': json['administeredBySchulstrukturknoten'],
        'rollenart': RollenArtFromJSON(json['rollenart']),
        'merkmale': (new Set((json['merkmale'] as Array<any>).map(RollenMerkmalFromJSON))),
        'systemrechte': (new Set((json['systemrechte'] as Array<any>).map(RollenSystemRechtFromJSON))),
        'administeredBySchulstrukturknotenName': json['administeredBySchulstrukturknotenName'],
        'administeredBySchulstrukturknotenKennung': json['administeredBySchulstrukturknotenKennung'],
        'version': json['version'],
    };
}

export function RolleResponseToJSON(value?: RolleResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'name': value.name,
        'administeredBySchulstrukturknoten': value.administeredBySchulstrukturknoten,
        'rollenart': RollenArtToJSON(value.rollenart),
        'merkmale': (Array.from(value.merkmale as Set<any>).map(RollenMerkmalToJSON)),
        'systemrechte': (Array.from(value.systemrechte as Set<any>).map(RollenSystemRechtToJSON)),
        'administeredBySchulstrukturknotenName': value.administeredBySchulstrukturknotenName,
        'administeredBySchulstrukturknotenKennung': value.administeredBySchulstrukturknotenKennung,
        'version': value.version,
    };
}

