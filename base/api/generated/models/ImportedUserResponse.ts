/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImportDataItemStatus } from './ImportDataItemStatus';
import {
    ImportDataItemStatusFromJSON,
    ImportDataItemStatusFromJSONTyped,
    ImportDataItemStatusToJSON,
} from './ImportDataItemStatus';

/**
 * 
 * @export
 * @interface ImportedUserResponse
 */
export interface ImportedUserResponse {
    /**
     * 
     * @type {string}
     * @memberof ImportedUserResponse
     */
    klasse: string;
    /**
     * 
     * @type {string}
     * @memberof ImportedUserResponse
     */
    vorname: string;
    /**
     * 
     * @type {string}
     * @memberof ImportedUserResponse
     */
    nachname: string;
    /**
     * 
     * @type {string}
     * @memberof ImportedUserResponse
     */
    benutzername: string;
    /**
     * Initiales Benutzerpasswort, muss nach der ersten Anmeldung ge√§ndert werden
     * @type {string}
     * @memberof ImportedUserResponse
     */
    startpasswort: string;
    /**
     * 
     * @type {ImportDataItemStatus}
     * @memberof ImportedUserResponse
     */
    status: ImportDataItemStatus;
}

/**
 * Check if a given object implements the ImportedUserResponse interface.
 */
export function instanceOfImportedUserResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "klasse" in value;
    isInstance = isInstance && "vorname" in value;
    isInstance = isInstance && "nachname" in value;
    isInstance = isInstance && "benutzername" in value;
    isInstance = isInstance && "startpasswort" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function ImportedUserResponseFromJSON(json: any): ImportedUserResponse {
    return ImportedUserResponseFromJSONTyped(json, false);
}

export function ImportedUserResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportedUserResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'klasse': json['klasse'],
        'vorname': json['vorname'],
        'nachname': json['nachname'],
        'benutzername': json['benutzername'],
        'startpasswort': json['startpasswort'],
        'status': ImportDataItemStatusFromJSON(json['status']),
    };
}

export function ImportedUserResponseToJSON(value?: ImportedUserResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'klasse': value.klasse,
        'vorname': value.vorname,
        'nachname': value.nachname,
        'benutzername': value.benutzername,
        'startpasswort': value.startpasswort,
        'status': ImportDataItemStatusToJSON(value.status),
    };
}

