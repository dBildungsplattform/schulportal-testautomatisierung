/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonInfoKontextErreichbarkeitResponseV1 } from './PersonInfoKontextErreichbarkeitResponseV1';
import {
    PersonInfoKontextErreichbarkeitResponseV1FromJSON,
    PersonInfoKontextErreichbarkeitResponseV1FromJSONTyped,
    PersonInfoKontextErreichbarkeitResponseV1ToJSON,
} from './PersonInfoKontextErreichbarkeitResponseV1';
import type { PersonenInfoKontextGruppeResponseV1 } from './PersonenInfoKontextGruppeResponseV1';
import {
    PersonenInfoKontextGruppeResponseV1FromJSON,
    PersonenInfoKontextGruppeResponseV1FromJSONTyped,
    PersonenInfoKontextGruppeResponseV1ToJSON,
} from './PersonenInfoKontextGruppeResponseV1';
import type { PersonenInfoKontextOrganisationResponseV1 } from './PersonenInfoKontextOrganisationResponseV1';
import {
    PersonenInfoKontextOrganisationResponseV1FromJSON,
    PersonenInfoKontextOrganisationResponseV1FromJSONTyped,
    PersonenInfoKontextOrganisationResponseV1ToJSON,
} from './PersonenInfoKontextOrganisationResponseV1';

/**
 * 
 * @export
 * @interface PersonInfoKontextResponseV1
 */
export interface PersonInfoKontextResponseV1 {
    /**
     * 
     * @type {string}
     * @memberof PersonInfoKontextResponseV1
     */
    id: string;
    /**
     * 
     * @type {PersonenInfoKontextOrganisationResponseV1}
     * @memberof PersonInfoKontextResponseV1
     */
    organisation: PersonenInfoKontextOrganisationResponseV1;
    /**
     * 
     * @type {string}
     * @memberof PersonInfoKontextResponseV1
     */
    rolle: PersonInfoKontextResponseV1RolleEnum;
    /**
     * 
     * @type {Array<PersonInfoKontextErreichbarkeitResponseV1>}
     * @memberof PersonInfoKontextResponseV1
     */
    erreichbarkeiten: Array<PersonInfoKontextErreichbarkeitResponseV1>;
    /**
     * 
     * @type {string}
     * @memberof PersonInfoKontextResponseV1
     */
    personenstatus: PersonInfoKontextResponseV1PersonenstatusEnum;
    /**
     * 
     * @type {Array<PersonenInfoKontextGruppeResponseV1>}
     * @memberof PersonInfoKontextResponseV1
     */
    gruppen: Array<PersonenInfoKontextGruppeResponseV1>;
}


/**
 * @export
 */
export const PersonInfoKontextResponseV1RolleEnum = {
    Lern: 'Lern',
    Lehr: 'Lehr',
    SorgBer: 'SorgBer',
    Extern: 'Extern',
    OrgAdmin: 'OrgAdmin',
    Leit: 'Leit',
    SysAdmin: 'SysAdmin',
    SchB: 'SchB',
    NLehr: 'NLehr'
} as const;
export type PersonInfoKontextResponseV1RolleEnum = typeof PersonInfoKontextResponseV1RolleEnum[keyof typeof PersonInfoKontextResponseV1RolleEnum];

/**
 * @export
 */
export const PersonInfoKontextResponseV1PersonenstatusEnum = {
    Aktiv: 'Aktiv'
} as const;
export type PersonInfoKontextResponseV1PersonenstatusEnum = typeof PersonInfoKontextResponseV1PersonenstatusEnum[keyof typeof PersonInfoKontextResponseV1PersonenstatusEnum];


/**
 * Check if a given object implements the PersonInfoKontextResponseV1 interface.
 */
export function instanceOfPersonInfoKontextResponseV1(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "organisation" in value;
    isInstance = isInstance && "rolle" in value;
    isInstance = isInstance && "erreichbarkeiten" in value;
    isInstance = isInstance && "personenstatus" in value;
    isInstance = isInstance && "gruppen" in value;

    return isInstance;
}

export function PersonInfoKontextResponseV1FromJSON(json: any): PersonInfoKontextResponseV1 {
    return PersonInfoKontextResponseV1FromJSONTyped(json, false);
}

export function PersonInfoKontextResponseV1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonInfoKontextResponseV1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'organisation': PersonenInfoKontextOrganisationResponseV1FromJSON(json['organisation']),
        'rolle': json['rolle'],
        'erreichbarkeiten': ((json['erreichbarkeiten'] as Array<any>).map(PersonInfoKontextErreichbarkeitResponseV1FromJSON)),
        'personenstatus': json['personenstatus'],
        'gruppen': ((json['gruppen'] as Array<any>).map(PersonenInfoKontextGruppeResponseV1FromJSON)),
    };
}

export function PersonInfoKontextResponseV1ToJSON(value?: PersonInfoKontextResponseV1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'organisation': PersonenInfoKontextOrganisationResponseV1ToJSON(value.organisation),
        'rolle': value.rolle,
        'erreichbarkeiten': ((value.erreichbarkeiten as Array<any>).map(PersonInfoKontextErreichbarkeitResponseV1ToJSON)),
        'personenstatus': value.personenstatus,
        'gruppen': ((value.gruppen as Array<any>).map(PersonenInfoKontextGruppeResponseV1ToJSON)),
    };
}

