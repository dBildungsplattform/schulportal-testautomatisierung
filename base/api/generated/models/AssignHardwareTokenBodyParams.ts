/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssignHardwareTokenBodyParams
 */
export interface AssignHardwareTokenBodyParams {
    /**
     * 
     * @type {string}
     * @memberof AssignHardwareTokenBodyParams
     */
    serial: string;
    /**
     * 
     * @type {string}
     * @memberof AssignHardwareTokenBodyParams
     */
    otp: string;
    /**
     * 
     * @type {string}
     * @memberof AssignHardwareTokenBodyParams
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof AssignHardwareTokenBodyParams
     */
    userId: string;
}

/**
 * Check if a given object implements the AssignHardwareTokenBodyParams interface.
 */
export function instanceOfAssignHardwareTokenBodyParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "serial" in value;
    isInstance = isInstance && "otp" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "userId" in value;

    return isInstance;
}

export function AssignHardwareTokenBodyParamsFromJSON(json: any): AssignHardwareTokenBodyParams {
    return AssignHardwareTokenBodyParamsFromJSONTyped(json, false);
}

export function AssignHardwareTokenBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssignHardwareTokenBodyParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'serial': json['serial'],
        'otp': json['otp'],
        'username': json['username'],
        'userId': json['userId'],
    };
}

export function AssignHardwareTokenBodyParamsToJSON(value?: AssignHardwareTokenBodyParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'serial': value.serial,
        'otp': value.otp,
        'username': value.username,
        'userId': value.userId,
    };
}

