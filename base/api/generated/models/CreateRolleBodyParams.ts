/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RollenArt } from './RollenArt';
import {
    RollenArtFromJSON,
    RollenArtFromJSONTyped,
    RollenArtToJSON,
} from './RollenArt';
import type { RollenMerkmal } from './RollenMerkmal';
import {
    RollenMerkmalFromJSON,
    RollenMerkmalFromJSONTyped,
    RollenMerkmalToJSON,
} from './RollenMerkmal';
import type { RollenSystemRechtEnum } from './RollenSystemRechtEnum';
import {
    RollenSystemRechtEnumFromJSON,
    RollenSystemRechtEnumFromJSONTyped,
    RollenSystemRechtEnumToJSON,
} from './RollenSystemRechtEnum';

/**
 * 
 * @export
 * @interface CreateRolleBodyParams
 */
export interface CreateRolleBodyParams {
    /**
     * 
     * @type {string}
     * @memberof CreateRolleBodyParams
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CreateRolleBodyParams
     */
    administeredBySchulstrukturknoten: string;
    /**
     * 
     * @type {RollenArt}
     * @memberof CreateRolleBodyParams
     */
    rollenart: RollenArt;
    /**
     * 
     * @type {Set<RollenMerkmal>}
     * @memberof CreateRolleBodyParams
     */
    merkmale: Set<RollenMerkmal>;
    /**
     * 
     * @type {Set<RollenSystemRechtEnum>}
     * @memberof CreateRolleBodyParams
     */
    systemrechte: Set<RollenSystemRechtEnum>;
}

/**
 * Check if a given object implements the CreateRolleBodyParams interface.
 */
export function instanceOfCreateRolleBodyParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "administeredBySchulstrukturknoten" in value;
    isInstance = isInstance && "rollenart" in value;
    isInstance = isInstance && "merkmale" in value;
    isInstance = isInstance && "systemrechte" in value;

    return isInstance;
}

export function CreateRolleBodyParamsFromJSON(json: any): CreateRolleBodyParams {
    return CreateRolleBodyParamsFromJSONTyped(json, false);
}

export function CreateRolleBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateRolleBodyParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'administeredBySchulstrukturknoten': json['administeredBySchulstrukturknoten'],
        'rollenart': RollenArtFromJSON(json['rollenart']),
        'merkmale': (new Set((json['merkmale'] as Array<any>).map(RollenMerkmalFromJSON))),
        'systemrechte': (new Set((json['systemrechte'] as Array<any>).map(RollenSystemRechtEnumFromJSON))),
    };
}

export function CreateRolleBodyParamsToJSON(value?: CreateRolleBodyParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'administeredBySchulstrukturknoten': value.administeredBySchulstrukturknoten,
        'rollenart': RollenArtToJSON(value.rollenart),
        'merkmale': (Array.from(value.merkmale as Set<any>).map(RollenMerkmalToJSON)),
        'systemrechte': (Array.from(value.systemrechte as Set<any>).map(RollenSystemRechtEnumToJSON)),
    };
}

