/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrganisationsTyp } from './OrganisationsTyp';
import {
    OrganisationsTypFromJSON,
    OrganisationsTypFromJSONTyped,
    OrganisationsTypToJSON,
} from './OrganisationsTyp';
import type { RollenArt } from './RollenArt';
import {
    RollenArtFromJSON,
    RollenArtFromJSONTyped,
    RollenArtToJSON,
} from './RollenArt';
import type { RollenMerkmal } from './RollenMerkmal';
import {
    RollenMerkmalFromJSON,
    RollenMerkmalFromJSONTyped,
    RollenMerkmalToJSON,
} from './RollenMerkmal';

/**
 * 
 * @export
 * @interface DBiamPersonenzuordnungResponse
 */
export interface DBiamPersonenzuordnungResponse {
    /**
     * 
     * @type {string}
     * @memberof DBiamPersonenzuordnungResponse
     */
    sskId: string;
    /**
     * 
     * @type {string}
     * @memberof DBiamPersonenzuordnungResponse
     */
    rolleId: string;
    /**
     * 
     * @type {string}
     * @memberof DBiamPersonenzuordnungResponse
     */
    sskName: string;
    /**
     * 
     * @type {string}
     * @memberof DBiamPersonenzuordnungResponse
     */
    sskDstNr: string | null;
    /**
     * 
     * @type {string}
     * @memberof DBiamPersonenzuordnungResponse
     */
    rolle: string;
    /**
     * 
     * @type {RollenArt}
     * @memberof DBiamPersonenzuordnungResponse
     */
    rollenArt: RollenArt;
    /**
     * 
     * @type {string}
     * @memberof DBiamPersonenzuordnungResponse
     */
    administriertVon: string;
    /**
     * 
     * @type {OrganisationsTyp}
     * @memberof DBiamPersonenzuordnungResponse
     */
    typ: OrganisationsTyp;
    /**
     * 
     * @type {boolean}
     * @memberof DBiamPersonenzuordnungResponse
     */
    editable: boolean;
    /**
     * 
     * @type {Date}
     * @memberof DBiamPersonenzuordnungResponse
     */
    befristung: Date | null;
    /**
     * 
     * @type {Array<RollenMerkmal>}
     * @memberof DBiamPersonenzuordnungResponse
     */
    merkmale: Array<RollenMerkmal>;
    /**
     * 
     * @type {Array<string>}
     * @memberof DBiamPersonenzuordnungResponse
     */
    admins: Array<string> | null;
}

/**
 * Check if a given object implements the DBiamPersonenzuordnungResponse interface.
 */
export function instanceOfDBiamPersonenzuordnungResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sskId" in value;
    isInstance = isInstance && "rolleId" in value;
    isInstance = isInstance && "sskName" in value;
    isInstance = isInstance && "sskDstNr" in value;
    isInstance = isInstance && "rolle" in value;
    isInstance = isInstance && "rollenArt" in value;
    isInstance = isInstance && "administriertVon" in value;
    isInstance = isInstance && "typ" in value;
    isInstance = isInstance && "editable" in value;
    isInstance = isInstance && "befristung" in value;
    isInstance = isInstance && "merkmale" in value;
    isInstance = isInstance && "admins" in value;

    return isInstance;
}

export function DBiamPersonenzuordnungResponseFromJSON(json: any): DBiamPersonenzuordnungResponse {
    return DBiamPersonenzuordnungResponseFromJSONTyped(json, false);
}

export function DBiamPersonenzuordnungResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DBiamPersonenzuordnungResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sskId': json['sskId'],
        'rolleId': json['rolleId'],
        'sskName': json['sskName'],
        'sskDstNr': json['sskDstNr'],
        'rolle': json['rolle'],
        'rollenArt': RollenArtFromJSON(json['rollenArt']),
        'administriertVon': json['administriertVon'],
        'typ': OrganisationsTypFromJSON(json['typ']),
        'editable': json['editable'],
        'befristung': (json['befristung'] === null ? null : new Date(json['befristung'])),
        'merkmale': ((json['merkmale'] as Array<any>).map(RollenMerkmalFromJSON)),
        'admins': json['admins'],
    };
}

export function DBiamPersonenzuordnungResponseToJSON(value?: DBiamPersonenzuordnungResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sskId': value.sskId,
        'rolleId': value.rolleId,
        'sskName': value.sskName,
        'sskDstNr': value.sskDstNr,
        'rolle': value.rolle,
        'rollenArt': RollenArtToJSON(value.rollenArt),
        'administriertVon': value.administriertVon,
        'typ': OrganisationsTypToJSON(value.typ),
        'editable': value.editable,
        'befristung': (value.befristung === null ? null : value.befristung.toISOString()),
        'merkmale': ((value.merkmale as Array<any>).map(RollenMerkmalToJSON)),
        'admins': value.admins,
    };
}

