/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EmailAddressStatus } from './EmailAddressStatus';
import {
    EmailAddressStatusFromJSON,
    EmailAddressStatusFromJSONTyped,
    EmailAddressStatusToJSON,
} from './EmailAddressStatus';

/**
 * Contains status and address. Returns email-address verified by OX (enabled) if available, otherwise returns most recently updated one (no prioritized status)
 * @export
 * @interface PersonResponseEmail
 */
export interface PersonResponseEmail {
    /**
     * 
     * @type {EmailAddressStatus}
     * @memberof PersonResponseEmail
     */
    status: EmailAddressStatus;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseEmail
     */
    address: string;
}

/**
 * Check if a given object implements the PersonResponseEmail interface.
 */
export function instanceOfPersonResponseEmail(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;
    isInstance = isInstance && "address" in value;

    return isInstance;
}

export function PersonResponseEmailFromJSON(json: any): PersonResponseEmail {
    return PersonResponseEmailFromJSONTyped(json, false);
}

export function PersonResponseEmailFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonResponseEmail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': EmailAddressStatusFromJSON(json['status']),
        'address': json['address'],
    };
}

export function PersonResponseEmailToJSON(value?: PersonResponseEmail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': EmailAddressStatusToJSON(value.status),
        'address': value.address,
    };
}

