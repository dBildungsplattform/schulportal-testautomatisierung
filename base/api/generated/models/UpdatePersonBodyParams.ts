/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonNameParams } from './PersonNameParams';
import {
    PersonNameParamsFromJSON,
    PersonNameParamsFromJSONTyped,
    PersonNameParamsToJSON,
} from './PersonNameParams';

/**
 * 
 * @export
 * @interface UpdatePersonBodyParams
 */
export interface UpdatePersonBodyParams {
    /**
     * 
     * @type {string}
     * @memberof UpdatePersonBodyParams
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdatePersonBodyParams
     */
    stammorganisation?: string;
    /**
     * 
     * @type {PersonNameParams}
     * @memberof UpdatePersonBodyParams
     */
    name: PersonNameParams;
    /**
     * 
     * @type {string}
     * @memberof UpdatePersonBodyParams
     */
    revision: string;
}

/**
 * Check if a given object implements the UpdatePersonBodyParams interface.
 */
export function instanceOfUpdatePersonBodyParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "revision" in value;

    return isInstance;
}

export function UpdatePersonBodyParamsFromJSON(json: any): UpdatePersonBodyParams {
    return UpdatePersonBodyParamsFromJSONTyped(json, false);
}

export function UpdatePersonBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePersonBodyParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'username': !exists(json, 'username') ? undefined : json['username'],
        'stammorganisation': !exists(json, 'stammorganisation') ? undefined : json['stammorganisation'],
        'name': PersonNameParamsFromJSON(json['name']),
        'revision': json['revision'],
    };
}

export function UpdatePersonBodyParamsToJSON(value?: UpdatePersonBodyParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'username': value.username,
        'stammorganisation': value.stammorganisation,
        'name': PersonNameParamsToJSON(value.name),
        'revision': value.revision,
    };
}

