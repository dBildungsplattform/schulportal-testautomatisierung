/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RollenerweiterungResponse
 */
export interface RollenerweiterungResponse {
    /**
     * 
     * @type {string}
     * @memberof RollenerweiterungResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof RollenerweiterungResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof RollenerweiterungResponse
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof RollenerweiterungResponse
     */
    organisationId: string;
    /**
     * 
     * @type {string}
     * @memberof RollenerweiterungResponse
     */
    rolleId: string;
    /**
     * 
     * @type {string}
     * @memberof RollenerweiterungResponse
     */
    serviceProviderId: string;
}

/**
 * Check if a given object implements the RollenerweiterungResponse interface.
 */
export function instanceOfRollenerweiterungResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "organisationId" in value;
    isInstance = isInstance && "rolleId" in value;
    isInstance = isInstance && "serviceProviderId" in value;

    return isInstance;
}

export function RollenerweiterungResponseFromJSON(json: any): RollenerweiterungResponse {
    return RollenerweiterungResponseFromJSONTyped(json, false);
}

export function RollenerweiterungResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RollenerweiterungResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'organisationId': json['organisationId'],
        'rolleId': json['rolleId'],
        'serviceProviderId': json['serviceProviderId'],
    };
}

export function RollenerweiterungResponseToJSON(value?: RollenerweiterungResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'organisationId': value.organisationId,
        'rolleId': value.rolleId,
        'serviceProviderId': value.serviceProviderId,
    };
}

