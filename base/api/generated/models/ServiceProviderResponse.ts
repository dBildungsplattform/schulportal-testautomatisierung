/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ServiceProviderKategorie } from './ServiceProviderKategorie';
import {
    ServiceProviderKategorieFromJSON,
    ServiceProviderKategorieFromJSONTyped,
    ServiceProviderKategorieToJSON,
} from './ServiceProviderKategorie';
import type { ServiceProviderMerkmal } from './ServiceProviderMerkmal';
import {
    ServiceProviderMerkmalFromJSON,
    ServiceProviderMerkmalFromJSONTyped,
    ServiceProviderMerkmalToJSON,
} from './ServiceProviderMerkmal';
import type { ServiceProviderTarget } from './ServiceProviderTarget';
import {
    ServiceProviderTargetFromJSON,
    ServiceProviderTargetFromJSONTyped,
    ServiceProviderTargetToJSON,
} from './ServiceProviderTarget';

/**
 * 
 * @export
 * @interface ServiceProviderResponse
 */
export interface ServiceProviderResponse {
    /**
     * 
     * @type {string}
     * @memberof ServiceProviderResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ServiceProviderResponse
     */
    name: string;
    /**
     * 
     * @type {ServiceProviderTarget}
     * @memberof ServiceProviderResponse
     */
    target: ServiceProviderTarget;
    /**
     * Can be undefined, if `target` is not equal to `URL`
     * @type {string}
     * @memberof ServiceProviderResponse
     */
    url: string;
    /**
     * 
     * @type {ServiceProviderKategorie}
     * @memberof ServiceProviderResponse
     */
    kategorie: ServiceProviderKategorie;
    /**
     * 
     * @type {boolean}
     * @memberof ServiceProviderResponse
     */
    hasLogo: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ServiceProviderResponse
     */
    requires2fa: boolean;
    /**
     * 
     * @type {Array<ServiceProviderMerkmal>}
     * @memberof ServiceProviderResponse
     */
    merkmale: Array<ServiceProviderMerkmal>;
}

/**
 * Check if a given object implements the ServiceProviderResponse interface.
 */
export function instanceOfServiceProviderResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "target" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "kategorie" in value;
    isInstance = isInstance && "hasLogo" in value;
    isInstance = isInstance && "requires2fa" in value;
    isInstance = isInstance && "merkmale" in value;

    return isInstance;
}

export function ServiceProviderResponseFromJSON(json: any): ServiceProviderResponse {
    return ServiceProviderResponseFromJSONTyped(json, false);
}

export function ServiceProviderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServiceProviderResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'target': ServiceProviderTargetFromJSON(json['target']),
        'url': json['url'],
        'kategorie': ServiceProviderKategorieFromJSON(json['kategorie']),
        'hasLogo': json['hasLogo'],
        'requires2fa': json['requires2fa'],
        'merkmale': ((json['merkmale'] as Array<any>).map(ServiceProviderMerkmalFromJSON)),
    };
}

export function ServiceProviderResponseToJSON(value?: ServiceProviderResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'target': ServiceProviderTargetToJSON(value.target),
        'url': value.url,
        'kategorie': ServiceProviderKategorieToJSON(value.kategorie),
        'hasLogo': value.hasLogo,
        'requires2fa': value.requires2fa,
        'merkmale': ((value.merkmale as Array<any>).map(ServiceProviderMerkmalToJSON)),
    };
}

