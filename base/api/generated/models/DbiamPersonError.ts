/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DbiamPersonError
 */
export interface DbiamPersonError {
    /**
     * 
     * @type {string}
     * @memberof DbiamPersonError
     */
    i18nKey: DbiamPersonErrorI18nKeyEnum;
    /**
     * Corresponds to HTTP Status code like 200, 404, 500
     * @type {number}
     * @memberof DbiamPersonError
     */
    code: number;
}


/**
 * @export
 */
export const DbiamPersonErrorI18nKeyEnum = {
    PersonError: 'PERSON_ERROR',
    VornameEnthaeltLeerzeichen: 'VORNAME_ENTHAELT_LEERZEICHEN',
    FamiliennameEnthaeltLeerzeichen: 'FAMILIENNAME_ENTHAELT_LEERZEICHEN',
    PersonNotFound: 'PERSON_NOT_FOUND',
    DownstreamUnreachable: 'DOWNSTREAM_UNREACHABLE',
    PersonalnummerRequired: 'PERSONALNUMMER_REQUIRED',
    NewerVersionOfPersonAvailable: 'NEWER_VERSION_OF_PERSON_AVAILABLE',
    PersonalnummerNichtEindeutig: 'PERSONALNUMMER_NICHT_EINDEUTIG',
    PersonUemPasswordModificationError: 'PERSON_UEM_PASSWORD_MODIFICATION_ERROR',
    LandesbediensteterSearchNoPersonFound: 'LANDESBEDIENSTETER_SEARCH_NO_PERSON_FOUND',
    LandesbediensteterSearchMultiplePersonsFound: 'LANDESBEDIENSTETER_SEARCH_MULTIPLE_PERSONS_FOUND'
} as const;
export type DbiamPersonErrorI18nKeyEnum = typeof DbiamPersonErrorI18nKeyEnum[keyof typeof DbiamPersonErrorI18nKeyEnum];


/**
 * Check if a given object implements the DbiamPersonError interface.
 */
export function instanceOfDbiamPersonError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "i18nKey" in value;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function DbiamPersonErrorFromJSON(json: any): DbiamPersonError {
    return DbiamPersonErrorFromJSONTyped(json, false);
}

export function DbiamPersonErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): DbiamPersonError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'i18nKey': json['i18nKey'],
        'code': json['code'],
    };
}

export function DbiamPersonErrorToJSON(value?: DbiamPersonError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'i18nKey': value.i18nKey,
        'code': value.code,
    };
}

