/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OrganisationRefResponse } from './OrganisationRefResponse';
import {
    OrganisationRefResponseFromJSON,
    OrganisationRefResponseFromJSONTyped,
    OrganisationRefResponseToJSON,
} from './OrganisationRefResponse';
import type { RolleRefResponse } from './RolleRefResponse';
import {
    RolleRefResponseFromJSON,
    RolleRefResponseFromJSONTyped,
    RolleRefResponseToJSON,
} from './RolleRefResponse';
import type { ServiceProviderKategorie } from './ServiceProviderKategorie';
import {
    ServiceProviderKategorieFromJSON,
    ServiceProviderKategorieFromJSONTyped,
    ServiceProviderKategorieToJSON,
} from './ServiceProviderKategorie';
import type { ServiceProviderMerkmal } from './ServiceProviderMerkmal';
import {
    ServiceProviderMerkmalFromJSON,
    ServiceProviderMerkmalFromJSONTyped,
    ServiceProviderMerkmalToJSON,
} from './ServiceProviderMerkmal';

/**
 * 
 * @export
 * @interface ManageableServiceProviderListEntryResponse
 */
export interface ManageableServiceProviderListEntryResponse {
    /**
     * 
     * @type {string}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    name: string;
    /**
     * 
     * @type {OrganisationRefResponse}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    administrationsebene: OrganisationRefResponse;
    /**
     * 
     * @type {ServiceProviderKategorie}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    kategorie: ServiceProviderKategorie;
    /**
     * 
     * @type {boolean}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    requires2fa: boolean;
    /**
     * 
     * @type {Array<ServiceProviderMerkmal>}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    merkmale: Array<ServiceProviderMerkmal>;
    /**
     * 
     * @type {boolean}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    hasRollenerweiterung: boolean;
    /**
     * 
     * @type {Array<RolleRefResponse>}
     * @memberof ManageableServiceProviderListEntryResponse
     */
    rollen: Array<RolleRefResponse>;
}

/**
 * Check if a given object implements the ManageableServiceProviderListEntryResponse interface.
 */
export function instanceOfManageableServiceProviderListEntryResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "administrationsebene" in value;
    isInstance = isInstance && "kategorie" in value;
    isInstance = isInstance && "requires2fa" in value;
    isInstance = isInstance && "merkmale" in value;
    isInstance = isInstance && "hasRollenerweiterung" in value;
    isInstance = isInstance && "rollen" in value;

    return isInstance;
}

export function ManageableServiceProviderListEntryResponseFromJSON(json: any): ManageableServiceProviderListEntryResponse {
    return ManageableServiceProviderListEntryResponseFromJSONTyped(json, false);
}

export function ManageableServiceProviderListEntryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManageableServiceProviderListEntryResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'administrationsebene': OrganisationRefResponseFromJSON(json['administrationsebene']),
        'kategorie': ServiceProviderKategorieFromJSON(json['kategorie']),
        'requires2fa': json['requires2fa'],
        'merkmale': ((json['merkmale'] as Array<any>).map(ServiceProviderMerkmalFromJSON)),
        'hasRollenerweiterung': json['hasRollenerweiterung'],
        'rollen': ((json['rollen'] as Array<any>).map(RolleRefResponseFromJSON)),
    };
}

export function ManageableServiceProviderListEntryResponseToJSON(value?: ManageableServiceProviderListEntryResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'administrationsebene': OrganisationRefResponseToJSON(value.administrationsebene),
        'kategorie': ServiceProviderKategorieToJSON(value.kategorie),
        'requires2fa': value.requires2fa,
        'merkmale': ((value.merkmale as Array<any>).map(ServiceProviderMerkmalToJSON)),
        'hasRollenerweiterung': value.hasRollenerweiterung,
        'rollen': ((value.rollen as Array<any>).map(RolleRefResponseToJSON)),
    };
}

