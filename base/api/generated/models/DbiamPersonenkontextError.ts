/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DbiamPersonenkontextError
 */
export interface DbiamPersonenkontextError {
    /**
     * 
     * @type {string}
     * @memberof DbiamPersonenkontextError
     */
    i18nKey: DbiamPersonenkontextErrorI18nKeyEnum;
    /**
     * Corresponds to HTTP Status code like 200, 404, 500
     * @type {number}
     * @memberof DbiamPersonenkontextError
     */
    code: number;
}


/**
 * @export
 */
export const DbiamPersonenkontextErrorI18nKeyEnum = {
    PersonenkontextSpecificationError: 'PERSONENKONTEXT_SPECIFICATION_ERROR',
    NurLehrUndLernAnKlasse: 'NUR_LEHR_UND_LERN_AN_KLASSE',
    GleicheRolleAnKlasseWieSchule: 'GLEICHE_ROLLE_AN_KLASSE_WIE_SCHULE',
    OrganisationMatchesRollenart: 'ORGANISATION_MATCHES_ROLLENART',
    PersonenkontextAnlageError: 'PERSONENKONTEXT_ANLAGE_ERROR',
    RolleNurAnPassendeOrganisation: 'ROLLE_NUR_AN_PASSENDE_ORGANISATION',
    PersonalnummerNichtEindeutig: 'PERSONALNUMMER_NICHT_EINDEUTIG',
    LernHatKeineKlasse: 'LERN_HAT_KEINE_KLASSE'
} as const;
export type DbiamPersonenkontextErrorI18nKeyEnum = typeof DbiamPersonenkontextErrorI18nKeyEnum[keyof typeof DbiamPersonenkontextErrorI18nKeyEnum];


/**
 * Check if a given object implements the DbiamPersonenkontextError interface.
 */
export function instanceOfDbiamPersonenkontextError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "i18nKey" in value;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function DbiamPersonenkontextErrorFromJSON(json: any): DbiamPersonenkontextError {
    return DbiamPersonenkontextErrorFromJSONTyped(json, false);
}

export function DbiamPersonenkontextErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): DbiamPersonenkontextError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'i18nKey': json['i18nKey'],
        'code': json['code'],
    };
}

export function DbiamPersonenkontextErrorToJSON(value?: DbiamPersonenkontextError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'i18nKey': value.i18nKey,
        'code': value.code,
    };
}

