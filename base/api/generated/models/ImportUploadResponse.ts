/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImportDataItemResponse } from './ImportDataItemResponse';
import {
    ImportDataItemResponseFromJSON,
    ImportDataItemResponseFromJSONTyped,
    ImportDataItemResponseToJSON,
} from './ImportDataItemResponse';

/**
 * 
 * @export
 * @interface ImportUploadResponse
 */
export interface ImportUploadResponse {
    /**
     * The import transaction number. it will be needed to execute the import and download the result
     * @type {string}
     * @memberof ImportUploadResponse
     */
    importvorgangId: string;
    /**
     * It states if the import transaction contain errors.
     * @type {boolean}
     * @memberof ImportUploadResponse
     */
    isValid: boolean;
    /**
     * The total number of data items in the CSV file.
     * @type {number}
     * @memberof ImportUploadResponse
     */
    totalImportDataItems: number;
    /**
     * The total number of data items in the CSV file that are invalid.
     * @type {number}
     * @memberof ImportUploadResponse
     */
    totalInvalidImportDataItems: number;
    /**
     * 
     * @type {Array<ImportDataItemResponse>}
     * @memberof ImportUploadResponse
     */
    invalidImportDataItems: Array<ImportDataItemResponse>;
}

/**
 * Check if a given object implements the ImportUploadResponse interface.
 */
export function instanceOfImportUploadResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "importvorgangId" in value;
    isInstance = isInstance && "isValid" in value;
    isInstance = isInstance && "totalImportDataItems" in value;
    isInstance = isInstance && "totalInvalidImportDataItems" in value;
    isInstance = isInstance && "invalidImportDataItems" in value;

    return isInstance;
}

export function ImportUploadResponseFromJSON(json: any): ImportUploadResponse {
    return ImportUploadResponseFromJSONTyped(json, false);
}

export function ImportUploadResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportUploadResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'importvorgangId': json['importvorgangId'],
        'isValid': json['isValid'],
        'totalImportDataItems': json['totalImportDataItems'],
        'totalInvalidImportDataItems': json['totalInvalidImportDataItems'],
        'invalidImportDataItems': ((json['invalidImportDataItems'] as Array<any>).map(ImportDataItemResponseFromJSON)),
    };
}

export function ImportUploadResponseToJSON(value?: ImportUploadResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'importvorgangId': value.importvorgangId,
        'isValid': value.isValid,
        'totalImportDataItems': value.totalImportDataItems,
        'totalInvalidImportDataItems': value.totalInvalidImportDataItems,
        'invalidImportDataItems': ((value.invalidImportDataItems as Array<any>).map(ImportDataItemResponseToJSON)),
    };
}

