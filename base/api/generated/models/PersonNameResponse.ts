/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PersonNameResponse
 */
export interface PersonNameResponse {
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    familiennamen: string;
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    vorname: string;
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    initialenfamilienname: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    initialenvorname: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    rufname: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    titel: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PersonNameResponse
     */
    anrede: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PersonNameResponse
     */
    namenspraefix: Array<string> | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof PersonNameResponse
     */
    namenssuffix: Array<string> | null;
    /**
     * 
     * @type {string}
     * @memberof PersonNameResponse
     */
    sortierindex: string | null;
}

/**
 * Check if a given object implements the PersonNameResponse interface.
 */
export function instanceOfPersonNameResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "familiennamen" in value;
    isInstance = isInstance && "vorname" in value;
    isInstance = isInstance && "initialenfamilienname" in value;
    isInstance = isInstance && "initialenvorname" in value;
    isInstance = isInstance && "rufname" in value;
    isInstance = isInstance && "titel" in value;
    isInstance = isInstance && "anrede" in value;
    isInstance = isInstance && "namenspraefix" in value;
    isInstance = isInstance && "namenssuffix" in value;
    isInstance = isInstance && "sortierindex" in value;

    return isInstance;
}

export function PersonNameResponseFromJSON(json: any): PersonNameResponse {
    return PersonNameResponseFromJSONTyped(json, false);
}

export function PersonNameResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonNameResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'familiennamen': json['familiennamen'],
        'vorname': json['vorname'],
        'initialenfamilienname': json['initialenfamilienname'],
        'initialenvorname': json['initialenvorname'],
        'rufname': json['rufname'],
        'titel': json['titel'],
        'anrede': json['anrede'],
        'namenspraefix': json['namenspraefix'],
        'namenssuffix': json['namenssuffix'],
        'sortierindex': json['sortierindex'],
    };
}

export function PersonNameResponseToJSON(value?: PersonNameResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'familiennamen': value.familiennamen,
        'vorname': value.vorname,
        'initialenfamilienname': value.initialenfamilienname,
        'initialenvorname': value.initialenvorname,
        'rufname': value.rufname,
        'titel': value.titel,
        'anrede': value.anrede,
        'namenspraefix': value.namenspraefix,
        'namenssuffix': value.namenssuffix,
        'sortierindex': value.sortierindex,
    };
}

