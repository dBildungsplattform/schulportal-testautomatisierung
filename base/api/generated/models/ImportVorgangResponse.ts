/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImportStatus } from './ImportStatus';
import {
    ImportStatusFromJSON,
    ImportStatusFromJSONTyped,
    ImportStatusToJSON,
} from './ImportStatus';

/**
 * 
 * @export
 * @interface ImportVorgangResponse
 */
export interface ImportVorgangResponse {
    /**
     * 
     * @type {string}
     * @memberof ImportVorgangResponse
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ImportVorgangResponse
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ImportVorgangResponse
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof ImportVorgangResponse
     */
    rollenname: string;
    /**
     * 
     * @type {string}
     * @memberof ImportVorgangResponse
     */
    organisationsname: string;
    /**
     * 
     * @type {number}
     * @memberof ImportVorgangResponse
     */
    dataItemCount: number;
    /**
     * 
     * @type {ImportStatus}
     * @memberof ImportVorgangResponse
     */
    status: ImportStatus;
}

/**
 * Check if a given object implements the ImportVorgangResponse interface.
 */
export function instanceOfImportVorgangResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "rollenname" in value;
    isInstance = isInstance && "organisationsname" in value;
    isInstance = isInstance && "dataItemCount" in value;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function ImportVorgangResponseFromJSON(json: any): ImportVorgangResponse {
    return ImportVorgangResponseFromJSONTyped(json, false);
}

export function ImportVorgangResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportVorgangResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'rollenname': json['rollenname'],
        'organisationsname': json['organisationsname'],
        'dataItemCount': json['dataItemCount'],
        'status': ImportStatusFromJSON(json['status']),
    };
}

export function ImportVorgangResponseToJSON(value?: ImportVorgangResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'rollenname': value.rollenname,
        'organisationsname': value.organisationsname,
        'dataItemCount': value.dataItemCount,
        'status': ImportStatusToJSON(value.status),
    };
}

