/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonNameParams } from './PersonNameParams';
import {
    PersonNameParamsFromJSON,
    PersonNameParamsFromJSONTyped,
    PersonNameParamsToJSON,
} from './PersonNameParams';
import type { PersonResponseEmail } from './PersonResponseEmail';
import {
    PersonResponseEmailFromJSON,
    PersonResponseEmailFromJSONTyped,
    PersonResponseEmailToJSON,
} from './PersonResponseEmail';
import type { UserLockParams } from './UserLockParams';
import {
    UserLockParamsFromJSON,
    UserLockParamsFromJSONTyped,
    UserLockParamsToJSON,
} from './UserLockParams';

/**
 * 
 * @export
 * @interface PersonResponse
 */
export interface PersonResponse {
    /**
     * 
     * @type {string}
     * @memberof PersonResponse
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponse
     */
    username: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonResponse
     */
    mandant: string;
    /**
     * 
     * @type {PersonNameParams}
     * @memberof PersonResponse
     */
    name: PersonNameParams;
    /**
     * 
     * @type {string}
     * @memberof PersonResponse
     */
    stammorganisation: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonResponse
     */
    revision: string;
    /**
     * Initiales Benutzerpasswort, muss nach der ersten Anmeldung ge√§ndert werden
     * @type {string}
     * @memberof PersonResponse
     */
    startpasswort: string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponse
     */
    personalnummer: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PersonResponse
     */
    isLocked: boolean | null;
    /**
     * 
     * @type {Array<UserLockParams>}
     * @memberof PersonResponse
     */
    userLock: Array<UserLockParams> | null;
    /**
     * Date of the most recent changes for the person
     * @type {Date}
     * @memberof PersonResponse
     */
    lastModified: Date;
    /**
     * 
     * @type {PersonResponseEmail}
     * @memberof PersonResponse
     */
    email: PersonResponseEmail | null;
}

/**
 * Check if a given object implements the PersonResponse interface.
 */
export function instanceOfPersonResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "mandant" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "stammorganisation" in value;
    isInstance = isInstance && "revision" in value;
    isInstance = isInstance && "startpasswort" in value;
    isInstance = isInstance && "personalnummer" in value;
    isInstance = isInstance && "isLocked" in value;
    isInstance = isInstance && "userLock" in value;
    isInstance = isInstance && "lastModified" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function PersonResponseFromJSON(json: any): PersonResponse {
    return PersonResponseFromJSONTyped(json, false);
}

export function PersonResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'mandant': json['mandant'],
        'name': PersonNameParamsFromJSON(json['name']),
        'stammorganisation': json['stammorganisation'],
        'revision': json['revision'],
        'startpasswort': json['startpasswort'],
        'personalnummer': json['personalnummer'],
        'isLocked': json['isLocked'],
        'userLock': (json['userLock'] === null ? null : (json['userLock'] as Array<any>).map(UserLockParamsFromJSON)),
        'lastModified': (new Date(json['lastModified'])),
        'email': PersonResponseEmailFromJSON(json['email']),
    };
}

export function PersonResponseToJSON(value?: PersonResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'mandant': value.mandant,
        'name': PersonNameParamsToJSON(value.name),
        'stammorganisation': value.stammorganisation,
        'revision': value.revision,
        'startpasswort': value.startpasswort,
        'personalnummer': value.personalnummer,
        'isLocked': value.isLocked,
        'userLock': (value.userLock === null ? null : (value.userLock as Array<any>).map(UserLockParamsToJSON)),
        'lastModified': (value.lastModified.toISOString()),
        'email': PersonResponseEmailToJSON(value.email),
    };
}

