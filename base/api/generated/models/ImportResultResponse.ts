/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ImportedUserResponse } from './ImportedUserResponse';
import {
    ImportedUserResponseFromJSON,
    ImportedUserResponseFromJSONTyped,
    ImportedUserResponseToJSON,
} from './ImportedUserResponse';

/**
 * 
 * @export
 * @interface ImportResultResponse
 */
export interface ImportResultResponse {
    /**
     * 
     * @type {string}
     * @memberof ImportResultResponse
     */
    importvorgandId: string;
    /**
     * 
     * @type {string}
     * @memberof ImportResultResponse
     */
    rollenname: string;
    /**
     * 
     * @type {string}
     * @memberof ImportResultResponse
     */
    organisationsname: string;
    /**
     * 
     * @type {Array<ImportedUserResponse>}
     * @memberof ImportResultResponse
     */
    importedUsers: Array<ImportedUserResponse>;
    /**
     * Total number of imported users
     * @type {number}
     * @memberof ImportResultResponse
     */
    total: number;
    /**
     * Number of users on this page
     * @type {number}
     * @memberof ImportResultResponse
     */
    pageTotal: number;
}

/**
 * Check if a given object implements the ImportResultResponse interface.
 */
export function instanceOfImportResultResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "importvorgandId" in value;
    isInstance = isInstance && "rollenname" in value;
    isInstance = isInstance && "organisationsname" in value;
    isInstance = isInstance && "importedUsers" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "pageTotal" in value;

    return isInstance;
}

export function ImportResultResponseFromJSON(json: any): ImportResultResponse {
    return ImportResultResponseFromJSONTyped(json, false);
}

export function ImportResultResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImportResultResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'importvorgandId': json['importvorgandId'],
        'rollenname': json['rollenname'],
        'organisationsname': json['organisationsname'],
        'importedUsers': ((json['importedUsers'] as Array<any>).map(ImportedUserResponseFromJSON)),
        'total': json['total'],
        'pageTotal': json['pageTotal'],
    };
}

export function ImportResultResponseToJSON(value?: ImportResultResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'importvorgandId': value.importvorgandId,
        'rollenname': value.rollenname,
        'organisationsname': value.organisationsname,
        'importedUsers': ((value.importedUsers as Array<any>).map(ImportedUserResponseToJSON)),
        'total': value.total,
        'pageTotal': value.pageTotal,
    };
}

