/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonNameParams } from './PersonNameParams';
import {
    PersonNameParamsFromJSON,
    PersonNameParamsFromJSONTyped,
    PersonNameParamsToJSON,
} from './PersonNameParams';

/**
 * 
 * @export
 * @interface PersonResponseAutomapper
 */
export interface PersonResponseAutomapper {
    /**
     * 
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    username: string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    mandant: string;
    /**
     * 
     * @type {PersonNameParams}
     * @memberof PersonResponseAutomapper
     */
    name: PersonNameParams;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    stammorganisation: string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    revision: string;
    /**
     * Initiales Benutzerpasswort, muss nach der ersten Anmeldung ge√§ndert werden
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    startpasswort: string;
    /**
     * 
     * @type {string}
     * @memberof PersonResponseAutomapper
     */
    personalnummer: string;
}

/**
 * Check if a given object implements the PersonResponseAutomapper interface.
 */
export function instanceOfPersonResponseAutomapper(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "mandant" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "stammorganisation" in value;
    isInstance = isInstance && "revision" in value;
    isInstance = isInstance && "startpasswort" in value;
    isInstance = isInstance && "personalnummer" in value;

    return isInstance;
}

export function PersonResponseAutomapperFromJSON(json: any): PersonResponseAutomapper {
    return PersonResponseAutomapperFromJSONTyped(json, false);
}

export function PersonResponseAutomapperFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonResponseAutomapper {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'username': json['username'],
        'mandant': json['mandant'],
        'name': PersonNameParamsFromJSON(json['name']),
        'stammorganisation': json['stammorganisation'],
        'revision': json['revision'],
        'startpasswort': json['startpasswort'],
        'personalnummer': json['personalnummer'],
    };
}

export function PersonResponseAutomapperToJSON(value?: PersonResponseAutomapper | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'username': value.username,
        'mandant': value.mandant,
        'name': PersonNameParamsToJSON(value.name),
        'stammorganisation': value.stammorganisation,
        'revision': value.revision,
        'startpasswort': value.startpasswort,
        'personalnummer': value.personalnummer,
    };
}

