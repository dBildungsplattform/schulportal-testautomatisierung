/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DbiamOrganisationError
 */
export interface DbiamOrganisationError {
    /**
     * 
     * @type {string}
     * @memberof DbiamOrganisationError
     */
    i18nKey: DbiamOrganisationErrorI18nKeyEnum;
    /**
     * Corresponds to HTTP Status code like 200, 404, 500
     * @type {number}
     * @memberof DbiamOrganisationError
     */
    code: number;
}


/**
 * @export
 */
export const DbiamOrganisationErrorI18nKeyEnum = {
    OrganisationSpecificationError: 'ORGANISATION_SPECIFICATION_ERROR',
    KennungRequiredForSchule: 'KENNUNG_REQUIRED_FOR_SCHULE',
    NameRequiredForSchule: 'NAME_REQUIRED_FOR_SCHULE',
    SchuleKennungEindeutig: 'SCHULE_KENNUNG_EINDEUTIG',
    SchuleUnterTraeger: 'SCHULE_UNTER_TRAEGER',
    TraegerInTraeger: 'TRAEGER_IN_TRAEGER',
    NurKlasseUnterSchule: 'NUR_KLASSE_UNTER_SCHULE',
    ZyklusInOrganisation: 'ZYKLUS_IN_ORGANISATION',
    RootOrganisationImmutable: 'ROOT_ORGANISATION_IMMUTABLE',
    KlasseNurVonSchuleAdministriert: 'KLASSE_NUR_VON_SCHULE_ADMINISTRIERT',
    KlassennameAnSchuleEindeutig: 'KLASSENNAME_AN_SCHULE_EINDEUTIG',
    OrganisationIstBereitsZugewiesenError: 'ORGANISATION_IST_BEREITS_ZUGEWIESEN_ERROR',
    NameRequiredForKlasse: 'NAME_REQUIRED_FOR_KLASSE',
    NameEnthaeltLeerzeichen: 'NAME_ENTHAELT_LEERZEICHEN',
    KennungEnthaeltLeerzeichen: 'KENNUNG_ENTHAELT_LEERZEICHEN',
    EmailAdressOnOrganisationTyp: 'EMAIL_ADRESS_ON_ORGANISATION_TYP',
    NewerVersionOrganisation: 'NEWER_VERSION_ORGANISATION',
    OrganisationWechseltTeilbaum: 'ORGANISATION_WECHSELT_TEILBAUM',
    OrganisationZuweisungFehler: 'ORGANISATION_ZUWEISUNG_FEHLER',
    SchultraegerNameEindeutig: 'SCHULTRAEGER_NAME_EINDEUTIG'
} as const;
export type DbiamOrganisationErrorI18nKeyEnum = typeof DbiamOrganisationErrorI18nKeyEnum[keyof typeof DbiamOrganisationErrorI18nKeyEnum];


/**
 * Check if a given object implements the DbiamOrganisationError interface.
 */
export function instanceOfDbiamOrganisationError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "i18nKey" in value;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function DbiamOrganisationErrorFromJSON(json: any): DbiamOrganisationError {
    return DbiamOrganisationErrorFromJSONTyped(json, false);
}

export function DbiamOrganisationErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): DbiamOrganisationError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'i18nKey': json['i18nKey'],
        'code': json['code'],
    };
}

export function DbiamOrganisationErrorToJSON(value?: DbiamOrganisationError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'i18nKey': value.i18nKey,
        'code': value.code,
    };
}

