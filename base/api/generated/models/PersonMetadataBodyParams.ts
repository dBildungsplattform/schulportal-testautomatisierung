/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PersonMetadataBodyParams
 */
export interface PersonMetadataBodyParams {
    /**
     * 
     * @type {string}
     * @memberof PersonMetadataBodyParams
     */
    familienname: string;
    /**
     * 
     * @type {string}
     * @memberof PersonMetadataBodyParams
     */
    vorname: string;
    /**
     * 
     * @type {string}
     * @memberof PersonMetadataBodyParams
     */
    personalnummer?: string;
    /**
     * Date of the most recent changed Personalnummer
     * @type {Date}
     * @memberof PersonMetadataBodyParams
     */
    lastModified: Date;
    /**
     * 
     * @type {string}
     * @memberof PersonMetadataBodyParams
     */
    revision: string;
}

/**
 * Check if a given object implements the PersonMetadataBodyParams interface.
 */
export function instanceOfPersonMetadataBodyParams(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "familienname" in value;
    isInstance = isInstance && "vorname" in value;
    isInstance = isInstance && "lastModified" in value;
    isInstance = isInstance && "revision" in value;

    return isInstance;
}

export function PersonMetadataBodyParamsFromJSON(json: any): PersonMetadataBodyParams {
    return PersonMetadataBodyParamsFromJSONTyped(json, false);
}

export function PersonMetadataBodyParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonMetadataBodyParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'familienname': json['familienname'],
        'vorname': json['vorname'],
        'personalnummer': !exists(json, 'personalnummer') ? undefined : json['personalnummer'],
        'lastModified': (new Date(json['lastModified'])),
        'revision': json['revision'],
    };
}

export function PersonMetadataBodyParamsToJSON(value?: PersonMetadataBodyParams | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'familienname': value.familienname,
        'vorname': value.vorname,
        'personalnummer': value.personalnummer,
        'lastModified': (value.lastModified.toISOString()),
        'revision': value.revision,
    };
}

