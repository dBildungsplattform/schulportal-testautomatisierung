/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DbiamImportError
 */
export interface DbiamImportError {
    /**
     * 
     * @type {string}
     * @memberof DbiamImportError
     */
    i18nKey: DbiamImportErrorI18nKeyEnum;
    /**
     * Corresponds to HTTP Status code like 200, 404, 500
     * @type {number}
     * @memberof DbiamImportError
     */
    code: number;
}


/**
 * @export
 */
export const DbiamImportErrorI18nKeyEnum = {
    ImportError: 'IMPORT_ERROR',
    CsvParsingError: 'CSV_PARSING_ERROR',
    CsvFileEmptyError: 'CSV_FILE_EMPTY_ERROR',
    ImportTextFileCreationError: 'IMPORT_TEXT_FILE_CREATION_ERROR',
    ImportNurLernAnSchuleError: 'IMPORT_NUR_LERN_AN_SCHULE_ERROR',
    CsvFileInvalidHeaderError: 'CSV_FILE_INVALID_HEADER_ERROR',
    ImportMaxUsersLimitError: 'IMPORT_MAX_USERS_LIMIT_ERROR',
    CsvFileNoUsersError: 'CSV_FILE_NO_USERS_ERROR',
    ImportResultQueryLimitError: 'IMPORT_RESULT_QUERY_LIMIT_ERROR'
} as const;
export type DbiamImportErrorI18nKeyEnum = typeof DbiamImportErrorI18nKeyEnum[keyof typeof DbiamImportErrorI18nKeyEnum];


/**
 * Check if a given object implements the DbiamImportError interface.
 */
export function instanceOfDbiamImportError(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "i18nKey" in value;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function DbiamImportErrorFromJSON(json: any): DbiamImportError {
    return DbiamImportErrorFromJSONTyped(json, false);
}

export function DbiamImportErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): DbiamImportError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'i18nKey': json['i18nKey'],
        'code': json['code'],
    };
}

export function DbiamImportErrorToJSON(value?: DbiamImportError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'i18nKey': value.i18nKey,
        'code': value.code,
    };
}

