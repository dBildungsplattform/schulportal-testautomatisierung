/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DBiamPersonenkontextResponse } from './DBiamPersonenkontextResponse';
import {
    DBiamPersonenkontextResponseFromJSON,
    DBiamPersonenkontextResponseFromJSONTyped,
    DBiamPersonenkontextResponseToJSON,
} from './DBiamPersonenkontextResponse';
import type { PersonResponse } from './PersonResponse';
import {
    PersonResponseFromJSON,
    PersonResponseFromJSONTyped,
    PersonResponseToJSON,
} from './PersonResponse';

/**
 * 
 * @export
 * @interface DBiamPersonResponse
 */
export interface DBiamPersonResponse {
    /**
     * 
     * @type {PersonResponse}
     * @memberof DBiamPersonResponse
     */
    person: PersonResponse;
    /**
     * 
     * @type {Array<DBiamPersonenkontextResponse>}
     * @memberof DBiamPersonResponse
     */
    dBiamPersonenkontextResponses: Array<DBiamPersonenkontextResponse>;
}

/**
 * Check if a given object implements the DBiamPersonResponse interface.
 */
export function instanceOfDBiamPersonResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "person" in value;
    isInstance = isInstance && "dBiamPersonenkontextResponses" in value;

    return isInstance;
}

export function DBiamPersonResponseFromJSON(json: any): DBiamPersonResponse {
    return DBiamPersonResponseFromJSONTyped(json, false);
}

export function DBiamPersonResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): DBiamPersonResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'person': PersonResponseFromJSON(json['person']),
        'dBiamPersonenkontextResponses': ((json['dBiamPersonenkontextResponses'] as Array<any>).map(DBiamPersonenkontextResponseFromJSON)),
    };
}

export function DBiamPersonResponseToJSON(value?: DBiamPersonResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'person': PersonResponseToJSON(value.person),
        'dBiamPersonenkontextResponses': ((value.dBiamPersonenkontextResponses as Array<any>).map(DBiamPersonenkontextResponseToJSON)),
    };
}

