/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ManageableServiceProviderListEntryResponse } from './ManageableServiceProviderListEntryResponse';
import {
    ManageableServiceProviderListEntryResponseFromJSON,
    ManageableServiceProviderListEntryResponseFromJSONTyped,
    ManageableServiceProviderListEntryResponseToJSON,
} from './ManageableServiceProviderListEntryResponse';

/**
 * 
 * @export
 * @interface ProviderControllerGetManageableServiceProviders200Response
 */
export interface ProviderControllerGetManageableServiceProviders200Response {
    /**
     * 
     * @type {number}
     * @memberof ProviderControllerGetManageableServiceProviders200Response
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof ProviderControllerGetManageableServiceProviders200Response
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof ProviderControllerGetManageableServiceProviders200Response
     */
    limit: number;
    /**
     * 
     * @type {Array<ManageableServiceProviderListEntryResponse>}
     * @memberof ProviderControllerGetManageableServiceProviders200Response
     */
    items: Array<ManageableServiceProviderListEntryResponse>;
}

/**
 * Check if a given object implements the ProviderControllerGetManageableServiceProviders200Response interface.
 */
export function instanceOfProviderControllerGetManageableServiceProviders200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "offset" in value;
    isInstance = isInstance && "limit" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function ProviderControllerGetManageableServiceProviders200ResponseFromJSON(json: any): ProviderControllerGetManageableServiceProviders200Response {
    return ProviderControllerGetManageableServiceProviders200ResponseFromJSONTyped(json, false);
}

export function ProviderControllerGetManageableServiceProviders200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderControllerGetManageableServiceProviders200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'total': json['total'],
        'offset': json['offset'],
        'limit': json['limit'],
        'items': ((json['items'] as Array<any>).map(ManageableServiceProviderListEntryResponseFromJSON)),
    };
}

export function ProviderControllerGetManageableServiceProviders200ResponseToJSON(value?: ProviderControllerGetManageableServiceProviders200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'total': value.total,
        'offset': value.offset,
        'limit': value.limit,
        'items': ((value.items as Array<any>).map(ManageableServiceProviderListEntryResponseToJSON)),
    };
}

