/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonTimeLimitInfoResponse } from './PersonTimeLimitInfoResponse';
import {
    PersonTimeLimitInfoResponseFromJSON,
    PersonTimeLimitInfoResponseFromJSONTyped,
    PersonTimeLimitInfoResponseToJSON,
} from './PersonTimeLimitInfoResponse';
import type { PersonenkontextRolleFieldsResponse } from './PersonenkontextRolleFieldsResponse';
import {
    PersonenkontextRolleFieldsResponseFromJSON,
    PersonenkontextRolleFieldsResponseFromJSONTyped,
    PersonenkontextRolleFieldsResponseToJSON,
} from './PersonenkontextRolleFieldsResponse';

/**
 * 
 * @export
 * @interface UserinfoResponse
 */
export interface UserinfoResponse {
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    sub: string;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    personId: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    name: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    givenName: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    familyName: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    middleName: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    nickname: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    preferredUsername: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    profile: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    picture: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    website: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    email: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserinfoResponse
     */
    emailVerified: boolean | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    gender: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    birthdate: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    zoneinfo: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    locale: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    phoneNumber: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    updatedAt: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    passwordUpdatedAt: string | null;
    /**
     * 
     * @type {Array<PersonenkontextRolleFieldsResponse>}
     * @memberof UserinfoResponse
     */
    personenkontexte: Array<PersonenkontextRolleFieldsResponse>;
    /**
     * 
     * @type {string}
     * @memberof UserinfoResponse
     */
    acr: string;
    /**
     * 
     * @type {Array<PersonTimeLimitInfoResponse>}
     * @memberof UserinfoResponse
     */
    timeLimits: Array<PersonTimeLimitInfoResponse>;
}

/**
 * Check if a given object implements the UserinfoResponse interface.
 */
export function instanceOfUserinfoResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sub" in value;
    isInstance = isInstance && "personId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "givenName" in value;
    isInstance = isInstance && "familyName" in value;
    isInstance = isInstance && "middleName" in value;
    isInstance = isInstance && "nickname" in value;
    isInstance = isInstance && "preferredUsername" in value;
    isInstance = isInstance && "profile" in value;
    isInstance = isInstance && "picture" in value;
    isInstance = isInstance && "website" in value;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "emailVerified" in value;
    isInstance = isInstance && "gender" in value;
    isInstance = isInstance && "birthdate" in value;
    isInstance = isInstance && "zoneinfo" in value;
    isInstance = isInstance && "locale" in value;
    isInstance = isInstance && "phoneNumber" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "passwordUpdatedAt" in value;
    isInstance = isInstance && "personenkontexte" in value;
    isInstance = isInstance && "acr" in value;
    isInstance = isInstance && "timeLimits" in value;

    return isInstance;
}

export function UserinfoResponseFromJSON(json: any): UserinfoResponse {
    return UserinfoResponseFromJSONTyped(json, false);
}

export function UserinfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserinfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sub': json['sub'],
        'personId': json['personId'],
        'name': json['name'],
        'givenName': json['given_name'],
        'familyName': json['family_name'],
        'middleName': json['middle_name'],
        'nickname': json['nickname'],
        'preferredUsername': json['preferred_username'],
        'profile': json['profile'],
        'picture': json['picture'],
        'website': json['website'],
        'email': json['email'],
        'emailVerified': json['email_verified'],
        'gender': json['gender'],
        'birthdate': json['birthdate'],
        'zoneinfo': json['zoneinfo'],
        'locale': json['locale'],
        'phoneNumber': json['phone_number'],
        'updatedAt': json['updated_at'],
        'passwordUpdatedAt': json['password_updated_at'],
        'personenkontexte': ((json['personenkontexte'] as Array<any>).map(PersonenkontextRolleFieldsResponseFromJSON)),
        'acr': json['acr'],
        'timeLimits': ((json['timeLimits'] as Array<any>).map(PersonTimeLimitInfoResponseFromJSON)),
    };
}

export function UserinfoResponseToJSON(value?: UserinfoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sub': value.sub,
        'personId': value.personId,
        'name': value.name,
        'given_name': value.givenName,
        'family_name': value.familyName,
        'middle_name': value.middleName,
        'nickname': value.nickname,
        'preferred_username': value.preferredUsername,
        'profile': value.profile,
        'picture': value.picture,
        'website': value.website,
        'email': value.email,
        'email_verified': value.emailVerified,
        'gender': value.gender,
        'birthdate': value.birthdate,
        'zoneinfo': value.zoneinfo,
        'locale': value.locale,
        'phone_number': value.phoneNumber,
        'updated_at': value.updatedAt,
        'password_updated_at': value.passwordUpdatedAt,
        'personenkontexte': ((value.personenkontexte as Array<any>).map(PersonenkontextRolleFieldsResponseToJSON)),
        'acr': value.acr,
        'timeLimits': ((value.timeLimits as Array<any>).map(PersonTimeLimitInfoResponseToJSON)),
    };
}

