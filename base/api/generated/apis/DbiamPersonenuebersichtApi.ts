/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DBiamPersonenuebersichtControllerFindPersonenuebersichten200Response,
  DBiamPersonenuebersichtResponse,
  PersonenuebersichtBodyParams,
} from '../models';
import {
    DBiamPersonenuebersichtControllerFindPersonenuebersichten200ResponseFromJSON,
    DBiamPersonenuebersichtControllerFindPersonenuebersichten200ResponseToJSON,
    DBiamPersonenuebersichtResponseFromJSON,
    DBiamPersonenuebersichtResponseToJSON,
    PersonenuebersichtBodyParamsFromJSON,
    PersonenuebersichtBodyParamsToJSON,
} from '../models';

export interface DBiamPersonenuebersichtControllerFindPersonenuebersichtenRequest {
    personenuebersichtBodyParams: PersonenuebersichtBodyParams;
}

export interface DBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRequest {
    personId: string;
}

/**
 * DbiamPersonenuebersichtApi - interface
 * 
 * @export
 * @interface DbiamPersonenuebersichtApiInterface
 */
export interface DbiamPersonenuebersichtApiInterface {
    /**
     * 
     * @param {PersonenuebersichtBodyParams} personenuebersichtBodyParams 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DbiamPersonenuebersichtApiInterface
     */
    dBiamPersonenuebersichtControllerFindPersonenuebersichtenRaw(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DBiamPersonenuebersichtControllerFindPersonenuebersichten200Response>>;

    /**
     */
    dBiamPersonenuebersichtControllerFindPersonenuebersichten(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DBiamPersonenuebersichtControllerFindPersonenuebersichten200Response>;

    /**
     * 
     * @param {string} personId The ID for the person.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DbiamPersonenuebersichtApiInterface
     */
    dBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRaw(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DBiamPersonenuebersichtResponse>>;

    /**
     */
    dBiamPersonenuebersichtControllerFindPersonenuebersichtenByPerson(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DBiamPersonenuebersichtResponse>;

}

/**
 * 
 */
export class DbiamPersonenuebersichtApi extends runtime.BaseAPI implements DbiamPersonenuebersichtApiInterface {

    /**
     */
    async dBiamPersonenuebersichtControllerFindPersonenuebersichtenRaw(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DBiamPersonenuebersichtControllerFindPersonenuebersichten200Response>> {
        if (requestParameters.personenuebersichtBodyParams === null || requestParameters.personenuebersichtBodyParams === undefined) {
            throw new runtime.RequiredError('personenuebersichtBodyParams','Required parameter requestParameters.personenuebersichtBodyParams was null or undefined when calling dBiamPersonenuebersichtControllerFindPersonenuebersichten.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/api/dbiam/personenuebersicht`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PersonenuebersichtBodyParamsToJSON(requestParameters.personenuebersichtBodyParams),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DBiamPersonenuebersichtControllerFindPersonenuebersichten200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async dBiamPersonenuebersichtControllerFindPersonenuebersichten(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DBiamPersonenuebersichtControllerFindPersonenuebersichten200Response> {
        const response = await this.dBiamPersonenuebersichtControllerFindPersonenuebersichtenRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async dBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRaw(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DBiamPersonenuebersichtResponse>> {
        if (requestParameters.personId === null || requestParameters.personId === undefined) {
            throw new runtime.RequiredError('personId','Required parameter requestParameters.personId was null or undefined when calling dBiamPersonenuebersichtControllerFindPersonenuebersichtenByPerson.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/api/dbiam/personenuebersicht/{personId}`.replace(`{${"personId"}}`, encodeURIComponent(String(requestParameters.personId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DBiamPersonenuebersichtResponseFromJSON(jsonValue));
    }

    /**
     */
    async dBiamPersonenuebersichtControllerFindPersonenuebersichtenByPerson(requestParameters: DBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DBiamPersonenuebersichtResponse> {
        const response = await this.dBiamPersonenuebersichtControllerFindPersonenuebersichtenByPersonRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
