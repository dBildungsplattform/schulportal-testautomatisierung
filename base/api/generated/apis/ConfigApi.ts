/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  FeatureFlagResponse,
} from '../models';
import {
    FeatureFlagResponseFromJSON,
    FeatureFlagResponseToJSON,
} from '../models';

/**
 * ConfigApi - interface
 * 
 * @export
 * @interface ConfigApiInterface
 */
export interface ConfigApiInterface {
    /**
     * 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConfigApiInterface
     */
    configControllerGetFeatureFlagsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeatureFlagResponse>>;

    /**
     */
    configControllerGetFeatureFlags(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeatureFlagResponse>;

}

/**
 * 
 */
export class ConfigApi extends runtime.BaseAPI implements ConfigApiInterface {

    /**
     */
    async configControllerGetFeatureFlagsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<FeatureFlagResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/config`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => FeatureFlagResponseFromJSON(jsonValue));
    }

    /**
     */
    async configControllerGetFeatureFlags(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FeatureFlagResponse> {
        const response = await this.configControllerGetFeatureFlagsRaw(initOverrides);
        return await response.value();
    }

}
