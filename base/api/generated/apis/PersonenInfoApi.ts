/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PersonInfoResponseV1,
} from '../models';
import {
    PersonInfoResponseV1FromJSON,
    PersonInfoResponseV1ToJSON,
} from '../models';

export interface PersonenInfoControllerInfoV1Request {
    xOffset: string;
    xLimit: string;
}

/**
 * PersonenInfoApi - interface
 * 
 * @export
 * @interface PersonenInfoApiInterface
 */
export interface PersonenInfoApiInterface {
    /**
     * 
     * @summary liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers
     * @param {string} xOffset 
     * @param {string} xLimit 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PersonenInfoApiInterface
     */
    personenInfoControllerInfoV1Raw(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponseV1>>;

    /**
     * liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers
     */
    personenInfoControllerInfoV1(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponseV1>;

}

/**
 * 
 */
export class PersonenInfoApi extends runtime.BaseAPI implements PersonenInfoApiInterface {

    /**
     * liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers
     */
    async personenInfoControllerInfoV1Raw(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponseV1>> {
        if (requestParameters.xOffset === null || requestParameters.xOffset === undefined) {
            throw new runtime.RequiredError('xOffset','Required parameter requestParameters.xOffset was null or undefined when calling personenInfoControllerInfoV1.');
        }

        if (requestParameters.xLimit === null || requestParameters.xLimit === undefined) {
            throw new runtime.RequiredError('xLimit','Required parameter requestParameters.xLimit was null or undefined when calling personenInfoControllerInfoV1.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xOffset !== undefined && requestParameters.xOffset !== null) {
            headerParameters['x-offset'] = String(requestParameters.xOffset);
        }

        if (requestParameters.xLimit !== undefined && requestParameters.xLimit !== null) {
            headerParameters['x-limit'] = String(requestParameters.xLimit);
        }

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/api/personen-info`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PersonInfoResponseV1FromJSON(jsonValue));
    }

    /**
     * liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers
     */
    async personenInfoControllerInfoV1(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponseV1> {
        const response = await this.personenInfoControllerInfoV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
