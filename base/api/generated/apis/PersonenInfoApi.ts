/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PersonInfoResponseV1,
} from '../models';
import {
    PersonInfoResponseV1FromJSON,
    PersonInfoResponseV1ToJSON,
} from '../models';

export interface PersonenInfoControllerInfoV1Request {
    xOffset?: number;
    xLimit?: number;
}

/**
 * PersonenInfoApi - interface
 * 
 * @export
 * @interface PersonenInfoApiInterface
 */
export interface PersonenInfoApiInterface {
    /**
     * Das Limit (x-limit) darf maximal 5000 betragen.
     * @summary liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers. Das Limit (x-limit) darf maximal 5000 betragen.
     * @param {number} [xOffset] Offset f√ºr die Ergebnisse (maximal 5000)
     * @param {number} [xLimit] Maximale Anzahl der Ergebnisse (maximal 5000)
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PersonenInfoApiInterface
     */
    personenInfoControllerInfoV1Raw(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponseV1>>;

    /**
     * Das Limit (x-limit) darf maximal 5000 betragen.
     * liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers. Das Limit (x-limit) darf maximal 5000 betragen.
     */
    personenInfoControllerInfoV1(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponseV1>;

}

/**
 * 
 */
export class PersonenInfoApi extends runtime.BaseAPI implements PersonenInfoApiInterface {

    /**
     * Das Limit (x-limit) darf maximal 5000 betragen.
     * liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers. Das Limit (x-limit) darf maximal 5000 betragen.
     */
    async personenInfoControllerInfoV1Raw(requestParameters: PersonenInfoControllerInfoV1Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponseV1>> {
        const queryParameters: any = {};

        if (requestParameters.xOffset !== undefined) {
            queryParameters['x-offset'] = requestParameters.xOffset;
        }

        if (requestParameters.xLimit !== undefined) {
            queryParameters['x-limit'] = requestParameters.xLimit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/api/personen-info`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PersonInfoResponseV1FromJSON(jsonValue));
    }

    /**
     * Das Limit (x-limit) darf maximal 5000 betragen.
     * liefert Personeninformationen basierend auf den Berechtigungen auf Service Provider des aufrufenden Nutzers. Das Limit (x-limit) darf maximal 5000 betragen.
     */
    async personenInfoControllerInfoV1(requestParameters: PersonenInfoControllerInfoV1Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponseV1> {
        const response = await this.personenInfoControllerInfoV1Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
