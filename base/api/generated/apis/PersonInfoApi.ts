/* tslint:disable */
/* eslint-disable */
/**
 * dBildungs IAM
 * The dBildungs IAM server API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PersonInfoResponse,
  PersonInfoResponseV1,
} from '../models';
import {
    PersonInfoResponseFromJSON,
    PersonInfoResponseToJSON,
    PersonInfoResponseV1FromJSON,
    PersonInfoResponseV1ToJSON,
} from '../models';

/**
 * PersonInfoApi - interface
 * 
 * @export
 * @interface PersonInfoApiInterface
 */
export interface PersonInfoApiInterface {
    /**
     * 
     * @summary Info about logged in person.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PersonInfoApiInterface
     */
    personInfoControllerInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponse>>;

    /**
     * Info about logged in person.
     */
    personInfoControllerInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponse>;

    /**
     * 
     * @summary Info about logged in person.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PersonInfoApiInterface
     */
    personInfoControllerInfoV1Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponseV1>>;

    /**
     * Info about logged in person.
     */
    personInfoControllerInfoV1(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponseV1>;

}

/**
 * 
 */
export class PersonInfoApi extends runtime.BaseAPI implements PersonInfoApiInterface {

    /**
     * Info about logged in person.
     */
    async personInfoControllerInfoRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/api/person-info`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PersonInfoResponseFromJSON(jsonValue));
    }

    /**
     * Info about logged in person.
     */
    async personInfoControllerInfo(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponse> {
        const response = await this.personInfoControllerInfoRaw(initOverrides);
        return await response.value();
    }

    /**
     * Info about logged in person.
     */
    async personInfoControllerInfoV1Raw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PersonInfoResponseV1>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", []);
        }

        const response = await this.request({
            path: `/api/v1/person-info`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PersonInfoResponseV1FromJSON(jsonValue));
    }

    /**
     * Info about logged in person.
     */
    async personInfoControllerInfoV1(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PersonInfoResponseV1> {
        const response = await this.personInfoControllerInfoV1Raw(initOverrides);
        return await response.value();
    }

}
